version: '2'
x-kafka-environment-defaults: &KAFKA_ENV_DEFAULTS
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  JMX_PORT: 9991
  KAFKA_OPTS: "-javaagent:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar=7071:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml"
  KAFKA_HEAP_OPTS: "-Xms1g -Xmx1g"
  KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
  KAFKA_NUM_NETWORK_THREADS: 3
  KAFKA_NUM_IO_THREADS: 8
  KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
  KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
  KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
  KAFKA_LOG_DIRS: "/tmp/kafka/data"
  KAFKA_NUM_PARTITIONS: 1
  KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # kafka内部用来保存topic的offset的数据，其replication数量
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # kafka内部用来保存transaction state log的数据，其replication数量
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000
  #KAFKA_LOG_FLUSH_INTERVAL_MS: 1000
  KAFKA_LOG_RETENTION_HOURS: 168
  KAFKA_LOG_RETENTION_BYTES: 1073741824
  KAFKA_LOG_SEGMENT_BYTES: 1073741824
  KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_MIN_INSYNC_REPLICAS: 1 # partition的leader节点要求当前在线的replica节点的数量

x-kafka-logging-defaults: &KAFKA_LOGGING_DEFAULTS
  driver: "json-file"
  options:
    max-size: "512m"

networks:
  net:
    driver: "bridge"

volumes:
  kafka_vol_1:
    driver: "local"
  kafka_vol_2:
    driver: "local"
  kafka_vol_3:
    driver: "local"

services:
  zookeeper:
    image: "wurstmeister/zookeeper:latest"
    hostname: "zookeeper"
    container_name: "zookeeper"
    networks:
      - "net"
    ports:
      - "2181:2181"
    restart: "always"
    logging:
      <<: *KAFKA_LOGGING_DEFAULTS
  kafka_1:
    image: "wurstmeister/kafka:2.12-2.2.0"
    hostname: "kafka_1"
    container_name: "kafka_1"
    depends_on:
      - "zookeeper"
    volumes:
      - /private/tmp/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar
      - /private/tmp/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml
      - kafka_vol_1:/tmp/kafka/data
    networks:
      - "net"
    ports:
      - "19092:9092" # client port
      - "17071:7071" # jmx prometheus metrics
    expose:
      - "9092" # client port
      - "9093" # internal traffic
      - "9991" # jmx
      - "7071" # jmx prometheus metrics
    restart: "always"
    logging:
      <<: *KAFKA_LOGGING_DEFAULTS
    environment:
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka_1:9093,OUTSIDE://192.168.3.111:19092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_BROKER_ID: 0
      <<: *KAFKA_ENV_DEFAULTS
#  kafka_2:
#    image: "wurstmeister/kafka:2.12-2.2.0"
#    hostname: "kafka_2"
#    container_name: "kafka_2"
#    depends_on:
#      - "zookeeper"
#    volumes:
#      - /private/tmp/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar
#      - /private/tmp/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml
#      - kafka_vol_2:/tmp/kafka/data
#    networks:
#      - "net"
#    ports:
#      - "29092:9092" # client port
#      - "27071:7071" # jmx prometheus metrics
#    expose:
#      - "9092" # client port
#      - "9093" # internal traffic
#      - "9991" # jmx
#      - "7071" # jmx prometheus metrics
#    restart: "always"
#    logging:
#      <<: *KAFKA_LOGGING_DEFAULTS
#    environment:
#      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
#      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka_2:9093,OUTSIDE://192.168.3.111:29092"
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_BROKER_ID: 1
#      <<: *KAFKA_ENV_DEFAULTS
#  kafka_3:
#    image: "wurstmeister/kafka:2.12-2.2.0"
#    hostname: "kafka_3"
#    container_name: "kafka_3"
#    depends_on:
#      - "zookeeper"
#    volumes:
#      - /private/tmp/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar
#      - /private/tmp/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml
#      - kafka_vol_3:/tmp/kafka/data
#    networks:
#      - "net"
#    ports:
#      - "39092:9092" # client port
#      - "37071:7071" # jmx prometheus metrics
#    expose:
#      - "9092" # client port
#      - "9093" # internal traffic
#      - "9991" # jmx
#      - "7071" # jmx prometheus metrics
#    restart: "always"
#    logging:
#      <<: *KAFKA_LOGGING_DEFAULTS
#    environment:
#      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
#      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka_3:9093,OUTSIDE://192.168.3.111:39092"
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_BROKER_ID: 2
#      <<: *KAFKA_ENV_DEFAULTS
  kafka_exporter:
    image: "danielqsj/kafka-exporter:v1.2.0"
    hostname: "kafka_exporter"
    container_name: "kafka_exporter"
    depends_on:
      - "kafka_1"
#      - "kafka_2"
#      - "kafka_3"
    networks:
      - "net"
    ports:
      - "9308:9308"
    expose:
      - "9308"
    restart: "always"
    logging:
      <<: *KAFKA_LOGGING_DEFAULTS
    command: [
      "--kafka.server=192.168.3.111:19092",
#      "--kafka.server=192.168.3.111:29092",
#      "--kafka.server=192.168.3.111:39092",
      "--web.listen-address=0.0.0.0:9308",
      "--web.telemetry-path=/metrics",
      "--log.level=info",
      "--topic.filter=.*",
      "--group.filter=.*",
    ]
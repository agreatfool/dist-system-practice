version: '2'
x-prom-environment-defaults:
  C1: &RPOM_CONFIG_FILE "--config.file=/etc/prometheus/prometheus.yml"
  C2: &RPOM_LOG_LEVEL "--log.level=info"
  C3: &RPOM_LOG_FORMAT "--log.format=json"

networks:
  net:
    driver: "bridge"

volumes:
  grafana_vol:
    driver: "local"
  prometheus_vol:
    driver: "local"
  machine_xx1_federate_vol:
    driver: "local"
  machine_xx2_federate_vol:
    driver: "local"

x-prom-logging-defaults: &PROM_LOGGING_DEFAULTS
  driver: "json-file"
  options:
    max-size: "512m"

services:
  grafana:
    image: "grafana/grafana:6.1.2"
    container_name: "grafana"
    hostname: "grafana"
    volumes:
      - /private/tmp/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /private/tmp/grafana/provisioning:/etc/grafana/provisioning
      - /private/tmp/grafana/dashboards:/etc/grafana/dashboards
      - grafana_vol:/var/lib/grafana
    networks:
      - "net"
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: "always"
    logging:
      <<: *PROM_LOGGING_DEFAULTS
    environment:
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SERVER_HTTP_PORT=3000
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=abc123
      - GF_DEFAULT_APP_MODE=production
      - GF_LOGGING_MODE="console file"
      - GF_LOGGING_LEVEL=info
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
  prometheus:
    image: "prom/prometheus:v2.8.1"
    container_name: "prometheus"
    hostname: "prometheus"
    volumes:
      - /private/tmp/prom-master.yaml:/etc/prometheus/prometheus.yml
      - prometheus_vol:/prometheus
    networks:
      - "net"
    ports:
      - "9090:9090"
    depends_on:
      - machine_xx1_federate
#      - machine_xx2_federate
    restart: "always"
    logging:
      <<: *PROM_LOGGING_DEFAULTS
    command: [
      "--web.listen-address=0.0.0.0:9090",
      *RPOM_CONFIG_FILE,
      *RPOM_LOG_LEVEL,
      *RPOM_LOG_FORMAT,
    ]
  machine_xx1_federate:
    image: "prom/prometheus:v2.8.1"
    container_name: "machine_xx1_federate"
    hostname: "machine_xx1_federate"
    volumes:
      - /private/tmp/machines/machine_xx1_federate.yaml:/etc/prometheus/prometheus.yml
      - machine_xx1_federate_vol:/prometheus
    networks:
      - "net"
    ports:
      - "19090:9090"
    expose:
      - "9090"
    restart: "always"
    logging:
      <<: *PROM_LOGGING_DEFAULTS
    command: [
      "--web.listen-address=0.0.0.0:9090",
      *RPOM_CONFIG_FILE,
      *RPOM_LOG_LEVEL,
      *RPOM_LOG_FORMAT,
    ]
#  machine_xx2_federate:
#    image: "prom/prometheus:v2.8.1"
#    container_name: "machine_xx2_federate"
#    hostname: "machine_xx2_federate"
#    volumes:
#      - /private/tmp/machines/machine_xx2_federate.yaml:/etc/prometheus/prometheus.yml
#      - machine_xx2_federate_vol:/prometheus
#    networks:
#      - "net"
#    ports:
#      - "29090:9090"
#    expose:
#      - "9090"
#    restart: "always"
#    logging:
#      <<: *PROM_LOGGING_DEFAULTS
#    command: [
#      "--web.listen-address=0.0.0.0:9090",
#      *RPOM_CONFIG_FILE,
#      *RPOM_LOG_LEVEL,
#      *RPOM_LOG_FORMAT,
#    ]
  machine_xx1_cadvisor:
    image: "google/cadvisor:v0.33.0"
    container_name: "machine_xx1_cadvisor"
    hostname: "machine_xx1_cadvisor"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - "net"
    expose:
      - "8080"
    restart: "always"
    logging:
      <<: *PROM_LOGGING_DEFAULTS
    command: [
      "--listen_ip=0.0.0.0",
      "--port=8080",
    ]
#  machine_xx2_cadvisor:
#    image: "google/cadvisor:v0.33.0"
#    container_name: "machine_xx2_cadvisor"
#    hostname: "machine_xx2_cadvisor"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    networks:
#      - "net"
#    expose:
#      - "8080"
#    restart: "always"
#    logging:
#      <<: *PROM_LOGGING_DEFAULTS
#    command: [
#      "--listen_ip=0.0.0.0",
#      "--port=8080",
#    ]
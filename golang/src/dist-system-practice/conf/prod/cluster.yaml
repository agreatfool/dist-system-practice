version: '3'

x-kafka-defaults: &KAFKA_ENV_DEFAULTS
  KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  JMX_PORT: 9991
  KAFKA_OPTS: "-javaagent:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar=7071:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml"
  KAFKA_HEAP_OPTS: "-Xms${KAFKA_JVM_MEM} -Xmx${KAFKA_JVM_MEM}"
  KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
  KAFKA_NUM_NETWORK_THREADS: 3
  KAFKA_NUM_IO_THREADS: 8
  KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
  KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
  KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
  KAFKA_LOG_DIRS: /tmp/kafka/data
  KAFKA_NUM_PARTITIONS: 2
  KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2 # kafka内部用来保存topic的offset的数据，其replication数量
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2 # kafka内部用来保存transaction state log的数据，其replication数量
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000
  #KAFKA_LOG_FLUSH_INTERVAL_MS: 1000
  KAFKA_LOG_RETENTION_HOURS: 168
  KAFKA_LOG_RETENTION_BYTES: 1073741824
  KAFKA_LOG_SEGMENT_BYTES: 1073741824
  KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_MIN_INSYNC_REPLICAS: 1 # partition的leader节点要求当前在线的replica节点的数量

x-cas-defaults:
  C1: &CASSANDRA_MAX_HEAP_SIZE "MAX_HEAP_SIZE=${CAS_HEAP_SIZE}"
  C2: &CASSANDRA_HEAP_NEWSIZE "HEAP_NEWSIZE=${CAS_HEAP_NEWSIZE}"
  C3: &CASSANDRA_RPC_ADDRESS "CASSANDRA_RPC_ADDRESS=0.0.0.0"
  C4: &CASSANDRA_START_RPC "CASSANDRA_START_RPC=true"
  C5: &CASSANDRA_CLUSTER_NAME "CASSANDRA_CLUSTER_NAME=cassandra_cluster"
  C6: &CASSANDRA_SEEDS "CASSANDRA_SEEDS=cas_1"
  C7: &CASSANDRA_JVM "JAVA_OPTS=\
        -Dfile.encoding=UTF-8 \
        -Xms${CAS_JVM_MEM} \
        -Xmx${CAS_JVM_MEM} \
      "

x-jaeger-defaults:
  C04: &JAEGER_LOG_LEVEL_DEBUG "--log-level=debug"
  C05: &JAEGER_METRICS_BACKEND "--metrics-backend=prometheus"
  C06: &JAEGER_METRICS_HTTP_ROUTE "--metrics-http-route=/metrics"
  C14: &JAEGER_CASSANDRA_SERVERS "--cassandra.servers=cas_1"
  C15: &JAEGER_CASSANDRA_KEYSPACE "--cassandra.keyspace=jaeger_keyspace"
  C09: &JAEGER_AGENT_BINARY_PORT "--processor.jaeger-binary.server-host-port=0.0.0.0:6832"
  C10: &JAEGER_AGENT_COMPACT_PORT "--processor.jaeger-compact.server-host-port=0.0.0.0:6831"
  C11: &JAEGER_AGENT_HTTP_PORT "--http-server.host-port=0.0.0.0:5778"
  C12: &JAEGER_AGENT_REPORTER_TYPE "--reporter.type=grpc"
  C13: &JAEGER_AGENT_REPORTER_ADDS "--reporter.grpc.host-port=jcollector_1:14250,jcollector_2:14250"
  C07: &JAEGER_COLLECTOR_GRPC_PORT "--collector.grpc-port=14250"
  C08: &JAEGER_COLLECTOR_HTTP_PORT "--collector.http-port=14268"

x-es-defaults:
  C1: &ES_DISCOVERY_SEED_HOSTS "discovery.seed_hosts=es_1:9300,es_2:9300"
  C2: &ES_CLUSTER_INITIAL_MASTER_NODES "cluster.initial_master_nodes=es_1,es_2"
  C4: &ES_JAVA_OPTS "ES_JAVA_OPTS=\
        -Xms${ES_JVM_MEM} \
        -Xmx${ES_JVM_MEM} \
      "

x-prom-defaults:
  C1: &RPOM_CONFIG_FILE "--config.file=/etc/prometheus/prometheus.yml"
  C2: &RPOM_LOG_LEVEL "--log.level=info"
  C3: &RPOM_LOG_FORMAT "--log.format=json"

x-ulimit-defaults: &ULIMIT_DEFAULTS
  nproc: 65535
  nofile:
    soft: 65535
    hard: 65535
  memlock:
    soft: -1
    hard: -1

x-logging-defaults: &LOGGING_DEFAULTS
  driver: json-file
  options:
    max-size: 1g

networks:
  net:
    driver: overlay

volumes:
  # MYSQL
  mysqld_data:
    driver: local
  # KAFKA
  zookeeper_data:
    driver: local
  zookeeper_conf:
    driver: local
  kafka_data_1:
    driver: local
  kafka_home_1:
    driver: local
  kafka_data_2:
    driver: local
  kafka_home_2:
    driver: local
  # CASSANDRA
  cas_data_1:
    driver: local
  # PROMETHEUS
  grafana_data:
    driver: local
  prometheus_vol:
    driver: local

services:
  # ------------------------------------------------------------------------------------------------
  # MYSQL
  # ------------------------------------------------------------------------------------------------
  mysql:
    image: mysql:5.7.26
    container_name: mysqld
    hostname: mysqld
    networks:
      - net
    expose:
      - 3306
    volumes:
      - mysqld_data:/var/lib/mysql
      - ${BASEPATH}/schema:/docker-entrypoint-initdb.d
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PWD}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  mysqld_exporter:
    image: prom/mysqld-exporter:v0.11.0
    container_name: mysqld_exporter
    hostname: mysqld_exporter
    networks:
      - net
    ports:
      - 9104:9104
    expose:
      - 9104
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - DATA_SOURCE_NAME=${MYSQL_USER}:${MYSQL_PWD}@tcp(mysqld:3306)/${MYSQL_DB}?charset=utf8mb4&collation=utf8mb4_general_ci&parseTime=true&loc=Local
    command: [
      "--collect.binlog_size",
      "--collect.info_schema.processlist",
      "--collect.info_schema.innodb_cmp",
      "--collect.info_schema.innodb_cmpmem",
      "--collect.engine_innodb_status",
      "--collect.info_schema.innodb_metrics",
      "--collect.info_schema.innodb_tablespaces",
      "--collect.perf_schema.eventsstatements",
      "--collect.perf_schema.eventswaits",
      "--collect.perf_schema.file_events",
      "--collect.perf_schema.file_instances",
      "--collect.perf_schema.indexiowaits",
      "--collect.perf_schema.tablelocks",
      "--collect.perf_schema.tableiowaits",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # MEMCACHED
  # ------------------------------------------------------------------------------------------------
  memcached:
    image: memcached:1.5.14-alpine
    container_name: memcached
    hostname: memcached
    networks:
      - net
    expose:
      - 11211
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "-l 0.0.0.0",
      "-p 11211",
      "-m ${MEMCACHED_MEM}",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  memcached_exporter:
    image: prom/memcached-exporter:v0.5.0
    container_name: memcached_exporter
    hostname: memcached_exporter
    networks:
      - net
    ports:
      - 9150:9150
    expose:
      - 9150
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--memcached.address=memcached:11211",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # KFAKA
  # ------------------------------------------------------------------------------------------------
  zookeeper:
    image: "wurstmeister/zookeeper:latest"
    hostname: "zookeeper"
    container_name: "zookeeper"
    networks:
      - net
    ports:
      - 2181:2181
    expose:
      - 2181
    volumes:
      - zookeeper_data:/opt/zookeeper-3.4.13/data
      - zookeeper_conf:/opt/zookeeper-3.4.13/conf
    logging:
      <<: *LOGGING_DEFAULTS
  kafka_1:
    image: wurstmeister/kafka:2.12-2.2.0
    hostname: kafka_1
    container_name: kafka_1
    depends_on:
      - zookeeper
    networks:
      - net
    ports:
      - 9092:9092
      - 7071:7071
    expose:
      - 9092 # client port
      - 9093 # internal traffic
      - 9991 # jmx self
      - 7071 # jmx prometheus metrics
    volumes:
      - ${BASEPATH}/vendors/kafka/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar
      - ${BASEPATH}/vendors/kafka/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml
      - kafka_data_1:/tmp/kafka/data
      - kafka_home_1:/kafka
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka_1:9093,OUTSIDE://kafka_1:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_BROKER_ID: 0
      <<: *KAFKA_ENV_DEFAULTS
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  kafka_2:
    image: wurstmeister/kafka:2.12-2.2.0
    hostname: kafka_2
    container_name: kafka_2
    depends_on:
      - zookeeper
    networks:
      - net
    ports:
      - 9092:9092
      - 7071:7071
    expose:
      - 9092 # client port
      - 9093 # internal traffic
      - 9991 # jmx self
      - 7071 # jmx prometheus metrics
    volumes:
      - ${BASEPATH}/vendors/kafka/jmx_prometheus_javaagent-0.9.jar:/usr/local/bin/jmx_prometheus_javaagent-0.9.jar
      - ${BASEPATH}/vendors/kafka/jmx-kafka-2_0_0.yaml:/etc/jmx-exporter/jmx-kafka-2_0_0.yaml
      - kafka_data_2:/tmp/kafka/data
      - kafka_home_2:/kafka
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka_1:9093,OUTSIDE://kafka_2:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_BROKER_ID: 1
      <<: *KAFKA_ENV_DEFAULTS
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  kafka_exporter:
    image: danielqsj/kafka-exporter:v1.2.0
    hostname: kafka_exporter
    container_name: kafka_exporter
    depends_on:
      - kafka_1
      - kafka_2
    networks:
      - net
    ports:
      - 9308:9308
    expose:
      - 9308
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--kafka.server=kafka_1:9092",
      "--kafka.server=kafka_2:9092",
      "--web.listen-address=0.0.0.0:9308",
      "--web.telemetry-path=/metrics",
      "--log.level=info",
      "--topic.filter=.*",
      "--group.filter=.*",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # CASSANDRA
  # ------------------------------------------------------------------------------------------------
  cas_1:
    image: cassandra:3.11.4
    container_name: cas_1
    hostname: cas_1
    volumes:
      - cas_data_1:/var/lib/cassandra
    networks:
      - net
    expose:
      - 7199 # JMX
      - 9042 # Cassandra client port.
      - 9160 # Cassandra client port (Thrift).
      - 7000 # Cassandra inter-node cluster communication.
    logging:
      <<: *LOGGING_DEFAULTS
    ulimits:
      <<: *ULIMIT_DEFAULTS
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=cas_1
      - CASSANDRA_LISTEN_ADDRESS=cas_1
      - *CASSANDRA_MAX_HEAP_SIZE
      - *CASSANDRA_HEAP_NEWSIZE
      - *CASSANDRA_RPC_ADDRESS
      - *CASSANDRA_START_RPC
      - *CASSANDRA_CLUSTER_NAME
      - *CASSANDRA_SEEDS
      - *CASSANDRA_JVM
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # JAEGER
  # ------------------------------------------------------------------------------------------------
  jquery:
    image: jaegertracing/jaeger-query:1.11.0
    container_name: jquery
    hostname: jquery
    depends_on:
      - jaeger_collector_1
      - jaeger_collector_2
    networks:
      - net
    ports:
      - 16686:16686
    expose:
      - 16686
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - SPAN_STORAGE_TYPE=cassandra
    command: [
      "--query.port=16686",
      *JAEGER_CASSANDRA_SERVERS,
      *JAEGER_CASSANDRA_KEYSPACE,
      *JAEGER_METRICS_BACKEND,
      *JAEGER_METRICS_HTTP_ROUTE,
      *JAEGER_LOG_LEVEL_DEBUG
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  jcollector_1:
    image: jaegertracing/jaeger-collector:1.11.0
    container_name: jcollector_1
    hostname: jcollector_1
    networks:
      - net
    ports:
      - 14268:14268
    expose:
      - 14250 # grpc
      - 14268 # http (prometheus)
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - SPAN_STORAGE_TYPE=cassandra
    command: [
      *JAEGER_COLLECTOR_GRPC_PORT,
      *JAEGER_COLLECTOR_HTTP_PORT,
      *JAEGER_CASSANDRA_SERVERS,
      *JAEGER_CASSANDRA_KEYSPACE,
      *JAEGER_METRICS_BACKEND,
      *JAEGER_METRICS_HTTP_ROUTE,
      *JAEGER_LOG_LEVEL_DEBUG
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  jcollector_2:
    image: jaegertracing/jaeger-collector:1.11.0
    container_name: jcollector_2
    hostname: jcollector_2
    networks:
      - net
    ports:
      - 14268:14268
    expose:
      - 14250 # grpc
      - 14268 # http (prometheus)
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - SPAN_STORAGE_TYPE=cassandra
    command: [
    *JAEGER_COLLECTOR_GRPC_PORT,
    *JAEGER_COLLECTOR_HTTP_PORT,
    *JAEGER_CASSANDRA_SERVERS,
    *JAEGER_CASSANDRA_KEYSPACE,
    *JAEGER_METRICS_BACKEND,
    *JAEGER_METRICS_HTTP_ROUTE,
    *JAEGER_LOG_LEVEL_DEBUG
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # ELASTICSEARCH
  # ------------------------------------------------------------------------------------------------
  kibana:
    image: kibana:7.0.0
    container_name: kibana
    hostname: kibana
    depends_on:
      - es_1
      - es_2
    networks:
      - net
    ports:
      - 5601:5601
    expose:
      - 5601
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - SERVER_PORT=5601
      - SERVER_HOST=0.0.0.0
      - SERVER_NAME=es_cluster
      - ELASTICSEARCH_HOSTS=["http://es_1:9200"]
      - KIBANA_INDEX=.kibana
      - DIBANA_DEFAULTAPPID=home
      - ELASTICSEARCH_PINGTIMEOUT=1500
      - ELASTICSEARCH_REQUESTTIMEOUT=10000
      - ELASTICSEARCH_LOGQUERIES=false
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  es_1:
    image: elasticsearch:7.0.0
    container_name: es_1
    hostname: es_1
    networks:
      - net
    ports:
      - 9200:9200
    expose:
      - 9200
      - 9300
    volumes:
      - es_data_1:/usr/share/elasticsearch/data
      - es_logs_1:/usr/share/elasticsearch/logs
      - ${BASEPATH}/conf/prod/elasticsearch/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml
    logging:
      <<: *LOGGING_DEFAULTS
    ulimits:
      <<: *ULIMIT_DEFAULTS
    environment:
      - node.name=es_1
      - http.port=9200
      - transport.tcp.port=9300
      - node.master=true
      - node.data=true
      - *ES_DISCOVERY_SEED_HOSTS
      - *ES_CLUSTER_INITIAL_MASTER_NODES
      - *ES_JAVA_OPTS
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  es_2:
    image: elasticsearch:7.0.0
    container_name: es_2
    hostname: es_2
    networks:
      - net
    ports:
      - 9200:9200
    expose:
      - 9200
      - 9300
    volumes:
      - es_data_1:/usr/share/elasticsearch/data
      - es_logs_1:/usr/share/elasticsearch/logs
      - ${BASEPATH}/conf/prod/elasticsearch/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml
    logging:
      <<: *LOGGING_DEFAULTS
    ulimits:
      <<: *ULIMIT_DEFAULTS
    environment:
      - node.name=es_2
      - http.port=9200
      - transport.tcp.port=9300
      - node.master=true
      - node.data=true
      - *ES_DISCOVERY_SEED_HOSTS
      - *ES_CLUSTER_INITIAL_MASTER_NODES
      - *ES_JAVA_OPTS
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  es_exporter:
    image: justwatch/elasticsearch_exporter:1.1.0rc1
    container_name: es_exporter
    hostname: es_exporter
    depends_on:
      - es_1
      - es_2
    networks:
      - net
    ports:
      - 9114:9114
    expose:
      - 9114
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--web.listen-address=0.0.0.0:9114",
      "--web.telemetry-path=/metrics",
      "--es.uri=http://es_1:9200",
      "--es.all",
      "--es.cluster_settings",
      "--es.shards",
      "--es.indices",
      "--es.indices_settings",
      "--es.snapshots",
      "--log.level=info",
      "--log.format=json",
      "--log.output=stdout",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # PROMETHEUS
  # ------------------------------------------------------------------------------------------------
  grafana:
    image: grafana/grafana:6.1.2
    container_name: grafana
    hostname: grafana
    depends_on:
      - prometheus
    networks:
      - net
    ports:
      - 3000:3000
    expose:
      - 3000
    volumes:
      - ${BASEPATH}/conf/prod/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ${BASEPATH}/vendors/prometheus/grafana/provisioning:/etc/grafana/provisioning
      - ${BASEPATH}/vendors/prometheus/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SERVER_HTTP_PORT=3000
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PWD}
      - GF_DEFAULT_APP_MODE=production
      - GF_LOGGING_MODE="console file"
      - GF_LOGGING_LEVEL=info
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  prometheus:
    image: prom/prometheus:v2.8.1
    container_name: prometheus
    hostname: prometheus
    networks:
      - net
    ports:
      - 9090:9090
    expose:
      - 9090
    volumes:
      - ${BASEPATH}/conf/prod/prometheus/prom-master.yaml:/etc/prometheus/prometheus.yml
      - prometheus_vol:/prometheus
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--web.listen-address=0.0.0.0:9090",
      *RPOM_CONFIG_FILE,
      *RPOM_LOG_LEVEL,
      *RPOM_LOG_FORMAT,
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ------------------------------------------------------------------------------------------------
  # NODE SIDECARS
  # ------------------------------------------------------------------------------------------------
  # - HOST: GO APP WEB
  node_web:
    image: prom/node-exporter:0.18.1
    container_name: node_web
    hostname: node_web
    networks:
      - net
    ports:
      - 9100:9100
    expose:
      - 9100
    volumes:
      - /:/host:ro,rslave
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--path.rootfs /host"
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  cadvisor_web:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor_web
    hostname: cadvisor_web
    networks:
      - net
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--listen_ip=0.0.0.0",
      "--port=8080",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  jagent_web:
    image: jaegertracing/jaeger-agent:1.11.0
    container_name: jagent_web
    hostname: jagent_web
    depends_on:
      - jaeger_collector_1
      - jaeger_collector_2
    networks:
      - net
    ports:
      - 5778:5778
    expose:
      - 6832 # binary
      - 6831 # compact
      - 5778 # http (prometheus)
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      *JAEGER_AGENT_REPORTER_ADDS,
      *JAEGER_AGENT_REPORTER_TYPE,
      *JAEGER_AGENT_BINARY_PORT,
      *JAEGER_AGENT_COMPACT_PORT,
      *JAEGER_AGENT_HTTP_PORT,
      *JAEGER_METRICS_BACKEND,
      *JAEGER_METRICS_HTTP_ROUTE,
      *JAEGER_LOG_LEVEL_DEBUG
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  filebeat_web:
    image: elastic/filebeat:7.0.0
    container_name: filebeat_web
    hostname: filebeat_web
    depends_on:
      - es_1
      - es_2
    networks:
      - net
    volumes:
      - ${BASEPATH}/conf/prod/elasticsearch/filebeat.yaml:/usr/share/filebeat/filebeat.yml
      - /tmp/logs/app:/tmp/logs/app
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - ES_HOSTS=es_1:9200,es_2:9200
      - LOGGING_LEVEL=info # error, warning, info, debug
      - NUM_OF_OUTPUT_WORKERS=6 # node count * 3, 3 workers per node
      - NUM_OF_SHARDS=2
      - NUM_OF_REPLICAS=1 # replicas count per shard, total count is num_of_shards * (1 + num_of_replicas)
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # - GO APP SERVICE & CONSUMER
  node_service:
    image: prom/node-exporter:0.18.1
    container_name: node_service
    hostname: node_service
    networks:
      - net
    ports:
      - 9100:9100
    expose:
      - 9100
    volumes:
      - /:/host:ro,rslave
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--path.rootfs /host"
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  cadvisor_service:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor_service
    hostname: cadvisor_service
    networks:
      - net
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      "--listen_ip=0.0.0.0",
      "--port=8080",
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  jagent_service:
    image: jaegertracing/jaeger-agent:1.11.0
    container_name: jagent_service
    hostname: jagent_service
    depends_on:
      - jaeger_collector_1
      - jaeger_collector_2
    networks:
      - net
    ports:
      - 5778:5778
    expose:
      - 6832 # binary
      - 6831 # compact
      - 5778 # http (prometheus)
    logging:
      <<: *LOGGING_DEFAULTS
    command: [
      *JAEGER_AGENT_REPORTER_ADDS,
      *JAEGER_AGENT_REPORTER_TYPE,
      *JAEGER_AGENT_BINARY_PORT,
      *JAEGER_AGENT_COMPACT_PORT,
      *JAEGER_AGENT_HTTP_PORT,
      *JAEGER_METRICS_BACKEND,
      *JAEGER_METRICS_HTTP_ROUTE,
      *JAEGER_LOG_LEVEL_DEBUG
    ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  filebeat_service:
    image: elastic/filebeat:7.0.0
    container_name: filebeat_service
    hostname: filebeat_service
    depends_on:
      - es_1
      - es_2
    networks:
      - net
    volumes:
      - ${BASEPATH}/conf/prod/elasticsearch/filebeat.yaml:/usr/share/filebeat/filebeat.yml
      - /tmp/logs/app:/tmp/logs/app
    logging:
      <<: *LOGGING_DEFAULTS
    environment:
      - ES_HOSTS=es_1:9200,es_2:9200
      - LOGGING_LEVEL=info # error, warning, info, debug
      - NUM_OF_OUTPUT_WORKERS=6 # node count * 3, 3 workers per node
      - NUM_OF_SHARDS=2
      - NUM_OF_REPLICAS=1 # replicas count per shard, total count is num_of_shards * (1 + num_of_replicas)
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s